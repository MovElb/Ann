worker_processes 1;
user root;

events {
  use epoll;
  multi_accept on;
  worker_connections  4096;
}

# only log critical errors
error_log /var/log/nginx/error.log crit;

http {
    include  /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format   main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /dev/stdout main;

    server {
        listen 80;
        server_name seann.ru;
        return 301 https://$host$request_uri;
    }

    upstream aiohttp {
        server unix:/var/lib/aiohttp/aiohttp_1.sock fail_timeout=0;
        server unix:/var/lib/aiohttp/aiohttp_2.sock fail_timeout=0;
        server unix:/var/lib/aiohttp/aiohttp_3.sock fail_timeout=0;
        server unix:/var/lib/aiohttp/aiohttp_4.sock fail_timeout=0;
        server unix:/var/lib/aiohttp/aiohttp_5.sock fail_timeout=0;
        server unix:/var/lib/aiohttp/aiohttp_6.sock fail_timeout=0;
        server unix:/var/lib/aiohttp/aiohttp_7.sock fail_timeout=0;
        server unix:/var/lib/aiohttp/aiohttp_8.sock fail_timeout=0;
    }

    server {
        server_name seann.ru;

        #listen 80;
        listen 443 ssl default deferred;

        include /etc/nginx/ssl.conf;

        client_max_body_size 1m;
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        reset_timedout_connection on;
        client_body_timeout 10;
        keepalive_timeout 30;
        keepalive_requests 1000;
        types_hash_max_size 2048;

        location / {
            root /var/www/seann.ru/;
            gzip  on;
            gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript application/json;

            # kill cache
            add_header Last-Modified $date_gmt;
            add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            if_modified_since off;
            expires off;
            etag off;

        }

        location /api/ {
            proxy_set_header   Host                 $host;
            proxy_set_header   X-Real-IP            $remote_addr;
            proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;

            proxy_redirect off;
            proxy_buffering off;

            add_header Access-Control-Allow-Origin  *;
            add_header Access-Control-Allow-Methods POST,GET,OPTIONS,PUT,DELETE;
            add_header Access-Control-Allow-Headers Content-Type,Accept;

            proxy_pass http://aiohttp;
        }
    }
}
